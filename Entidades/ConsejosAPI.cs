// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Entidades;
//
//    var consejosApi = ConsejosApi.FromJson(jsonString);

namespace Entidades
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ConsejosApi
    {
        [JsonProperty("idConsejo")]
        public long IdConsejo { get; set; }

        [JsonProperty("titulo")]
        public string Titulo { get; set; }

        [JsonProperty("descripcion")]
        public string Descripcion { get; set; }
    }

    public partial class ConsejosApi
    {
        public static List<ConsejosApi> FromJson(string json) => JsonConvert.DeserializeObject<List<ConsejosApi>>(json, Entidades.Converter1.Settings);
    }

    public static class Serialize1
    {
        public static string ToJson(this ConsejosApi self) => JsonConvert.SerializeObject(self, Entidades.Converter1.Settings);
    }

    internal static class Converter1
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}

